version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: densndent-backend
    ports:
      - "8080:80"  # Backend nginx runs on port 80, expose to host port 8080
    env_file:
      - ./.env  # Use root .env file
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
        - REACT_APP_AUTH0_DOMAIN=${REACT_APP_AUTH0_DOMAIN}
        - REACT_APP_AUTH0_CLIENT_ID=${REACT_APP_AUTH0_CLIENT_ID}
        - REACT_APP_AUTH0_AUDIENCE=${REACT_APP_AUTH0_AUDIENCE}
        - BASE_FILE_URL_FOR_IMG=${BASE_FILE_URL_FOR_IMG}
        - REACT_APP_NO_IMAGE_AVAILABLE_LOGO=${REACT_APP_NO_IMAGE_AVAILABLE_LOGO}
    container_name: densndent-frontend
    ports:
      - "3000:80"  # Frontend nginx runs on port 80, expose to host port 3000
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./.env  # Use root .env file
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  app-network:
    driver: bridge
    name: densndent-network

volumes:
  # Add any persistent volumes if needed in the future
  app-logs:
    driver: local
